# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Contracts.Core - NB release CI

trigger: none

parameters:
  - name: Version.Major
    type: number
    default: 0

  - name: Version.Minor
    type: number
    default: 9

  - name: Version.Patch
    type: number
    default: 0

#schedules:
#  - cron: "0 0 * * *"
#    batch: true
#    branches:
#      include:
#        - Releases/

pool:
  vmImage: 'windows-latest'

steps:

- task: UseDotNet@2
  displayName: Install .NET Core 3.1
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: UseDotNet@2
  displayName: Install .NET 5
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 5.8.1

- task: DotNetCoreCLI@2
  displayName: Restore Contracts.Core
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)\Sources\Contracts.Core\Core.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Restore Contracts.Core.Tests
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)\Sources\Tests\Contracts.Core.Tests\Contracts.Core.Tests.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build Contracts.Core
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)\Sources\Contracts.Core\Core.csproj'
    configuration: Release

- task: DotNetCoreCLI@2
  displayName: Build Tests
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)\Sources\Tests\Contracts.Core.Tests\Contracts.Core.Tests.csproj'
    configuration: Release

- task: DotNetCoreCLI@2
  displayName: Test Contracts.Core
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)\Sources\Tests\Contracts.Core.Tests\Contracts.Core.Tests.csproj'

- task: DotNetCoreCLI@2
  displayName: Pack Contracts.Core
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)\Sources\Contracts.Core\Core.csproj'
    configuration: 'Release'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '$(Version.Major)'
    minorVersion: '$(Version.Minor)'
    patchVersion: '$(Version.Patch)'

- task: NuGetCommand@2
  displayName: Publish package to Nuget.org
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org mateuszokroj1'